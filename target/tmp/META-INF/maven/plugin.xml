<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 -->

<plugin>
  <name>Apache Maven Shade Plugin</name>
  <description>Repackages the project classes together with their dependencies into a single uber-jar, optionally renaming classes
    or removing unused classes.</description>
  <groupId>org.apache.maven.plugins</groupId>
  <artifactId>maven-shade-plugin</artifactId>
  <version>3.2.0</version>
  <goalPrefix>shade</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>help</goal>
      <description>Display help information on maven-shade-plugin.&lt;br&gt;
Call &lt;code&gt;mvn shade:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.maven.plugins.shade.mojo.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>shade</goal>
      <description>Mojo that performs shading delegating to the Shader component.</description>
      <requiresDependencyResolution>runtime</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>org.apache.maven.plugins.shade.mojo.ShadeMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>artifactSet</name>
          <type>org.apache.maven.plugins.shade.mojo.ArtifactSet</type>
          <required>false</required>
          <editable>true</editable>
          <description>Artifacts to include/exclude from the final artifact. Artifacts are denoted by composite identifiers of the
general form &lt;code&gt;groupId:artifactId:type:classifier&lt;/code&gt;. Since version 1.3, the wildcard characters &apos;*&apos; and
&apos;?&apos; can be used within the sub parts of those composite identifiers to do pattern matching. For convenience, the
syntax &lt;code&gt;groupId&lt;/code&gt; is equivalent to &lt;code&gt;groupId:*:*:*&lt;/code&gt;, &lt;code&gt;groupId:artifactId&lt;/code&gt; is
equivalent to &lt;code&gt;groupId:artifactId:*:*&lt;/code&gt; and &lt;code&gt;groupId:artifactId:classifier&lt;/code&gt; is equivalent to
&lt;code&gt;groupId:artifactId:*:classifier&lt;/code&gt;. For example:

&lt;pre&gt;
&amp;lt;artifactSet&amp;gt;
  &amp;lt;includes&amp;gt;
    &amp;lt;include&amp;gt;org.apache.maven:*&amp;lt;/include&amp;gt;
  &amp;lt;/includes&amp;gt;
  &amp;lt;excludes&amp;gt;
    &amp;lt;exclude&amp;gt;*:maven-core&amp;lt;/exclude&amp;gt;
  &amp;lt;/excludes&amp;gt;
&amp;lt;/artifactSet&amp;gt;
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>createDependencyReducedPom</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Flag whether to generate a simplified POM for the shaded artifact. If set to &lt;code&gt;true&lt;/code&gt;, dependencies that
have been included into the uber JAR will be removed from the &lt;code&gt;&amp;lt;dependencies&amp;gt;&lt;/code&gt; section of the
generated POM. The reduced POM will be named &lt;code&gt;dependency-reduced-pom.xml&lt;/code&gt; and is stored into the same
directory as the shaded artifact. Unless you also specify dependencyReducedPomLocation, the plugin will create a
temporary file named &lt;code&gt;dependency-reduced-pom.xml&lt;/code&gt; in the project basedir.</description>
        </parameter>
        <parameter>
          <name>createSourcesJar</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>When true, it will attempt to create a sources jar as well</description>
        </parameter>
        <parameter>
          <name>dependencyReducedPomLocation</name>
          <type>java.io.File</type>
          <since>1.7</since>
          <required>false</required>
          <editable>true</editable>
          <description>Where to put the dependency reduced pom. Note: setting a value for this parameter with a directory other than
${basedir} will change the value of ${basedir} for all executions that come after the shade execution. This is
often not what you want. This is considered an open issue with this plugin.</description>
        </parameter>
        <parameter>
          <name>filters</name>
          <type>org.apache.maven.plugins.shade.mojo.ArchiveFilter[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Archive Filters to be used. Allows you to specify an artifact in the form of a composite identifier as used by
{@link #artifactSet} and a set of include/exclude file patterns for filtering which contents of the archive are
added to the shaded jar. From a logical perspective, includes are processed before excludes, thus it&apos;s possible
to use an include to collect a set of files from the archive then use excludes to further reduce the set. By
default, all files are included and no files are excluded. If multiple filters apply to an artifact, the
intersection of the matched files will be included in the final JAR. For example:

&lt;pre&gt;
&amp;lt;filters&amp;gt;
  &amp;lt;filter&amp;gt;
    &amp;lt;artifact&amp;gt;junit:junit&amp;lt;/artifact&amp;gt;
    &amp;lt;includes&amp;gt;
      &amp;lt;include&amp;gt;org/junit/**&amp;lt;/include&amp;gt;
    &amp;lt;/includes&amp;gt;
    &amp;lt;excludes&amp;gt;
      &amp;lt;exclude&amp;gt;org/junit/experimental/**&amp;lt;/exclude&amp;gt;
    &amp;lt;/excludes&amp;gt;
  &amp;lt;/filter&amp;gt;
&amp;lt;/filters&amp;gt;
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>finalName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the shaded artifactId.
&lt;p/&gt;
If you like to change the name of the native artifact, you may use the &amp;lt;build&gt;&amp;lt;finalName&gt; setting. If this
is set to something different than &amp;lt;build&gt;&amp;lt;finalName&gt;, no file replacement will be performed, even if
shadedArtifactAttached is being used.</description>
        </parameter>
        <parameter>
          <name>generateUniqueDependencyReducedPom</name>
          <type>boolean</type>
          <since>1.7.2</since>
          <required>false</required>
          <editable>true</editable>
          <description>Create a dependency-reduced POM in ${basedir}/drp-UNIQUE.pom. This avoids build collisions of parallel builds
without moving the dependency-reduced POM to a different directory. The property
maven.shade.dependency-reduced-pom is set to the generated filename.</description>
        </parameter>
        <parameter>
          <name>keepDependenciesWithProvidedScope</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>When true, dependencies are kept in the pom but with scope &apos;provided&apos;; when false, the dependency is removed.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description>Local maven repository.</description>
        </parameter>
        <parameter>
          <name>minimizeJar</name>
          <type>boolean</type>
          <since>1.4</since>
          <required>false</required>
          <editable>true</editable>
          <description>When true, dependencies will be stripped down on the class level to only the transitive hull required for the
artifact. &lt;em&gt;Note:&lt;/em&gt; Usage of this feature requires Java 1.5 or higher.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The destination directory for the shaded artifact.</description>
        </parameter>
        <parameter>
          <name>outputFile</name>
          <type>java.io.File</type>
          <since>1.3</since>
          <required>false</required>
          <editable>true</editable>
          <description>The path to the output file for the shaded artifact. When this parameter is set, the created archive will neither
replace the project&apos;s main artifact nor will it be attached. Hence, this parameter causes the parameters
{@link #finalName}, {@link #shadedArtifactAttached}, {@link #shadedClassifierName} and
{@link #createDependencyReducedPom} to be ignored when used.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven project.</description>
        </parameter>
        <parameter>
          <name>promoteTransitiveDependencies</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>When true, transitive deps of removed dependencies are promoted to direct dependencies. This should allow the
drop in replacement of the removed deps with the new shaded jar and everything should still work.</description>
        </parameter>
        <parameter>
          <name>relocations</name>
          <type>org.apache.maven.plugins.shade.mojo.PackageRelocation[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Packages to be relocated. For example:

&lt;pre&gt;
&amp;lt;relocations&amp;gt;
  &amp;lt;relocation&amp;gt;
    &amp;lt;pattern&amp;gt;org.apache&amp;lt;/pattern&amp;gt;
    &amp;lt;shadedPattern&amp;gt;hidden.org.apache&amp;lt;/shadedPattern&amp;gt;
    &amp;lt;includes&amp;gt;
      &amp;lt;include&amp;gt;org.apache.maven.*&amp;lt;/include&amp;gt;
    &amp;lt;/includes&amp;gt;
    &amp;lt;excludes&amp;gt;
      &amp;lt;exclude&amp;gt;org.apache.maven.Public*&amp;lt;/exclude&amp;gt;
    &amp;lt;/excludes&amp;gt;
  &amp;lt;/relocation&amp;gt;
&amp;lt;/relocations&amp;gt;
&lt;/pre&gt;

&lt;em&gt;Note:&lt;/em&gt; Support for includes exists only since version 1.4.</description>
        </parameter>
        <parameter>
          <name>remoteArtifactRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description>Remote repositories which will be searched for source attachments.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>true</required>
          <editable>false</editable>
          <description>The current Maven session.</description>
        </parameter>
        <parameter>
          <name>shadeSourcesContent</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>When true, it will attempt to shade the contents of the java source files when creating the sources jar. When
false, it will just relocate the java source files to the shaded paths, but will not modify the actual contents
of the java source files.</description>
        </parameter>
        <parameter>
          <name>shadeTestJar</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>shadedArtifactAttached</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Defines whether the shaded artifact should be attached as classifier to the original artifact. If false, the
shaded jar will be the main artifact of the project</description>
        </parameter>
        <parameter>
          <name>shadedArtifactId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the shaded artifactId. So you may want to use a different artifactId and keep the standard version.
If the original artifactId was &quot;foo&quot; then the final artifact would be something like foo-1.0.jar. So if you
change the artifactId you might have something like foo-special-1.0.jar.</description>
        </parameter>
        <parameter>
          <name>shadedClassifierName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the classifier used in case the shaded artifact is attached.</description>
        </parameter>
        <parameter>
          <name>shadedGroupFilter</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>If specified, this will include only artifacts which have groupIds which start with this.</description>
        </parameter>
        <parameter>
          <name>shaderHint</name>
          <type>java.lang.String</type>
          <since>1.6</since>
          <required>false</required>
          <editable>true</editable>
          <description>You can pass here the roleHint about your own Shader implementation plexus component.</description>
        </parameter>
        <parameter>
          <name>transformers</name>
          <type>org.apache.maven.plugins.shade.resource.ResourceTransformer[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>Resource transformers to be used. Please see the &quot;Examples&quot; section for more information on available
transformers and their configuration.</description>
        </parameter>
        <parameter>
          <name>useBaseVersion</name>
          <type>boolean</type>
          <since>3.0</since>
          <required>false</required>
          <editable>true</editable>
          <description>When true, the version of each dependency of the reduced pom will be based on the baseVersion of the original
dependency instead of its resolved version. For example, if the original pom (transitively) depends on
a:a:2.7-SNAPSHOT, if useBaseVersion is set to false, the reduced pom will depend on a:a:2.7-20130312.222222-12
whereas if useBaseVersion is set to true, the reduced pom will depend on a:a:2.7-SNAPSHOT</description>
        </parameter>
      </parameters>
      <configuration>
        <createDependencyReducedPom implementation="boolean" default-value="true"/>
        <dependencyReducedPomLocation implementation="java.io.File" default-value="${basedir}/dependency-reduced-pom.xml"/>
        <generateUniqueDependencyReducedPom implementation="boolean" default-value="false"/>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <remoteArtifactRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <shadeSourcesContent implementation="boolean" default-value="false">${shadeSourcesContent}</shadeSourcesContent>
        <shadeTestJar implementation="boolean" default-value="false"/>
        <shadedArtifactId implementation="java.lang.String" default-value="${project.artifactId}"/>
        <shadedClassifierName implementation="java.lang.String" default-value="shaded"/>
        <useBaseVersion implementation="boolean" default-value="false"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.shared.transfer.artifact.resolve.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.shared.dependency.graph.DependencyGraphBuilder</role>
          <field-name>dependencyGraphBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.ProjectBuilder</role>
          <field-name>projectBuilder</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>projectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.plugins.shade.Shader</role>
          <role-hint>default</role-hint>
          <field-name>shader</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-plexus</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-bean</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
      <type>jar</type>
      <version>2.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-spi</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.14</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.2.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-artifact-transfer</artifactId>
      <type>jar</type>
      <version>0.10.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-common-artifact-filters</artifactId>
      <type>jar</type>
      <version>3.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-utils</artifactId>
      <type>jar</type>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <type>jar</type>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.5</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <type>jar</type>
      <version>6.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-commons</artifactId>
      <type>jar</type>
      <version>6.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-tree</artifactId>
      <type>jar</type>
      <version>6.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-analysis</artifactId>
      <type>jar</type>
      <version>6.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom2</artifactId>
      <type>jar</type>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-dependency-tree</artifactId>
      <type>jar</type>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>0.9.0.M2</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.vafer</groupId>
      <artifactId>jdependency</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-util</artifactId>
      <type>jar</type>
      <version>6.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <type>jar</type>
      <version>19.0</version>
    </dependency>
  </dependencies>
</plugin>